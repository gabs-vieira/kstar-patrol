Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 1
MAIN.ASM



      1	0000			     .model small
      2	0000			     .stack
      3
      4	0000			     .data
      5	0000  00			 menu db 0
      6					 ; 0 - Menu
      7					 ; 1 - Setor
      8					 ; 2 - Jogo
      9					 ; 3 - Game Over
     10	0001  00			 screen	db 0
     11	0002  01			 sector	db 1
     12
     13					 ; Strings para	o título e botões
     14	0003  07*(20) 20 5F 20 20 +	 string	 db 7 dup(" ")," _  __	 ___ _		  ",13,10
     15	      5F 5F 20 20 20 5F	5F+
     16	      5F 20 5F 20 20 20	20+
     17	      20 20 20 20 20 20	20+
     18	      20 0D 0A
     19	0026  07*(20) 7C 20 7C 2F +		 db 7 dup(" "),"| |/ /__/ __| |_ __ _ _	_ ",13,10
     20	      20 2F 5F 5F 2F 20	5F+
     21	      5F 7C 20 7C 5F 20	5F+
     22	      5F 20 5F 20 5F 20	5F+
     23	      20 0D 0A
     24	0049  07*(20) 7C 20 27 20 +		 db 7 dup(" "),"| ' <___\__ \  _/ _` | '_|",13,10
     25	      3C 5F 5F 5F 5C 5F	5F+
     26	      20 5C 20 20 5F 2F	20+
     27	      5F 60 20 7C 20 27	5F+
     28	      7C 0D 0A
     29	006C  07*(20) 7C 5F 7C 5C +		 db 7 dup(" "),"|_|\_\	|___/\__\__,_|_|  ",13,10
     30	      5F 5C 20 20 7C 5F	5F+
     31	      5F 2F 5C 5F 5F 5C	5F+
     32	      5F 2C 5F 7C 5F 7C	20+
     33	      20 0D 0A
     34	008F  07*(20) 7C 20 5F 20 +		 db 7 dup(" "),"| _ \__	_| |_ _	_ ___| |  ",13,10
     35	      5C 5F 5F 20 5F 7C	20+
     36	      7C 5F 20 5F 20 5F	20+
     37	      5F 5F 5F 7C 20 7C	20+
     38	      20 0D 0A
     39	00B2  07*(20) 7C 20 20 5F +		 db 7 dup(" "),"|  _/ _` |  _| '_/ _ \ |  ",13,10
     40	      2F 20 5F 60 20 7C	20+
     41	      20 5F 7C 20 27 5F	2F+
     42	      20 5F 20 5C 20 7C	20+
     43	      20 0D 0A
     44	00D5  07*(20) 7C 5F 7C 20 +		 db 7 dup(" "),"|_| \__,_|\__|_| \___/_|  ",13,10
     45	      5C 5F 5F 2C 5F 7C	5C+
     46	      5F 5F 7C 5F 7C 20	5C+
     47	      5F 5F 5F 2F 5F 7C	20+
     48	      20 0D 0A
     49
     50	      =00F5			 string_length equ $-string
     51
     52	00F8  0E*(20) DA C4 C4 C4 +	 btn_iniciar db	 14 dup(" "),218,196,196,196,196,196,196,196,196,196,191,13,10
     53	      C4 C4 C4 C4 C4 C4	BF+
     54	      0D 0A
     55	0113  0E*(20) B3 20 49 4E +		      db 14 dup(" "),179," INICIAR ",179,10,13
     56	      49 43 49 41 52 20	B3+
     57	      0A 0D
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 2
MAIN.ASM



     58	012E  0E*(20) C0 C4 C4 C4 +		      db 14 dup(" "),192,196,196,196,196,196,196,196,196,196,217,13,10
     59	      C4 C4 C4 C4 C4 C4	D9+
     60	      0D 0A
     61
     62	      =0051			 btn_iniciar_length equ	$-btn_iniciar
     63
     64	0149  0E*(20) DA C4 C4 C4 +	 btn_sair db  14 dup(" "),218,196,196,196,196,196,196,196,196,196,191,13,10
     65	      C4 C4 C4 C4 C4 C4	BF+
     66	      0D 0A
     67	0164  0E*(20) B3 20 20 53 +		   db 14 dup(" "),179,"	 SAIR	",179,10,13
     68	      41 49 52 20 20 20	B3+
     69	      0A 0D
     70	017F  0E*(20) C0 C4 C4 C4 +		   db 14 dup(" "),192,196,196,196,196,196,196,196,196,196,217,13,10
     71	      C4 C4 C4 C4 C4 C4	D9+
     72	      0D 0A
     73
     74	      =0051			 btn_sair_length equ $-btn_sair
     75
     76	019A  00 00 00 00 00 00	00+	 empty_sprite	 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     77	      00 00 00 00 00 00	00+
     78	      00
     79	01A9  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     80	      00 00 00 00 00 00	00+
     81	      00
     82	01B8  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     83	      00 00 00 00 00 00	00+
     84	      00
     85	01C7  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     86	      00 00 00 00 00 00	00+
     87	      00
     88	01D6  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     89	      00 00 00 00 00 00	00+
     90	      00
     91	01E5  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     92	      00 00 00 00 00 00	00+
     93	      00
     94	01F4  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     95	      00 00 00 00 00 00	00+
     96	      00
     97	0203  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     98	      00 00 00 00 00 00	00+
     99	      00
    100	0212  00 00 00 00 00 00	00+			 db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    101	      00 00 00 00 00 00	00+
    102	      00
    103
    104	0221  0F 0F 0F 0F 0F 0F	0F+	 ship	     db	15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
    105	      0F 0F 0F 0F 0F 00	00+
    106	      00
    107	0230  00 00 0F 0F 00 00	00+		     db	0,0,15,15,0,0,0,0,0,0,0,0,0,0,0
    108	      00 00 00 00 00 00	00+
    109	      00
    110	023F  00 00 0F 0F 0F 0F	00+		     db	0,0,15,15,15,15,0,0,0,0,0,0,0,0,0
    111	      00 00 00 00 00 00	00+
    112	      00
    113	024E  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,0,0,0,0,0,0,0
    114	      0F 00 00 00 00 00	00+
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 3
MAIN.ASM



    115	      00
    116	025D  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,15,15,15,15,15,15,15
    117	      0F 0F 0F 0F 0F 0F	0F+
    118	      0F
    119	026C  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,0,0,0,0,0,0,0
    120	      0F 00 00 00 00 00	00+
    121	      00
    122	027B  00 00 0F 0F 0F 0F	00+		     db	0,0,15,15,15,15,0,0,0,0,0,0,0,0,0
    123	      00 00 00 00 00 00	00+
    124	      00
    125	028A  00 00 0F 0F 00 00	00+		     db	0,0,15,15,0,0,0,0,0,0,0,0,0,0,0
    126	      00 00 00 00 00 00	00+
    127	      00
    128	0299  0F 0F 0F 0F 0F 0F	0F+		     db	15,15,15,15,15,15,15,15,15,15,15,15,0,0,0
    129	      0F 0F 0F 0F 0F 00	00+
    130	      00
    131
    132	02A8  0000			 ship_pos dw 0
    133
    134	02AA  00 00 00 00 00 00	00+	 alien_ship  db	0,0,0,0,0,0,0,0,9,9,9,9,9,9,9
    135	      00 09 09 09 09 09	09+
    136	      09
    137	02B9  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,0,0,0,0,0
    138	      00 09 09 00 00 00	00+
    139	      00
    140	02C8  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    141	      00 00 00 00 00 00	00+
    142	      00
    143	02D7  00 00 00 00 09 09	09+		     db	0,0,0,0,9,9,9,9,0,0,0,0,0,0,0
    144	      09 00 00 00 00 00	00+
    145	      00
    146	02E6  09 09 09 09 09 09	09+		     db	9,9,9,9,9,9,9,9,9,9,9,9,0,0,0
    147	      09 09 09 09 09 00	00+
    148	      00
    149	02F5  00 00 00 00 09 09	09+		     db	0,0,0,0,9,9,9,9,0,0,0,0,0,0,0
    150	      09 00 00 00 00 00	00+
    151	      00
    152	0304  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    153	      00 00 00 00 00 00	00+
    154	      00
    155	0313  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,0,0,0,0,0
    156	      00 09 09 00 00 00	00+
    157	      00
    158	0322  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,9,9,9,9,9
    159	      00 09 09 09 09 09	09+
    160	      09
    161
    162	0331  0000			 alien_ship_pos	dw 0
    163
    164	0333  0F 0F 0F 0F 0F 0F	0F+	 shot_nave    db 15,15,15,15,15,15,15,15,15,0,0,0,0,0,0
    165	      0F 0F 00 00 00 00	00+
    166	      00
    167	0342  0F*(00)				     db	15 dup (0)
    168	0351  0F*(00)				     db	15 dup (0)
    169	0360  0F*(00)				     db	15 dup (0)
    170	036F  00 00 00 00 00 00	0F+		     db	0,0,0,0,0,0,15,15,15,15,15,15,15,15,15
    171	      0F 0F 0F 0F 0F 0F	0F+
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 4
MAIN.ASM



    172	      0F
    173	037E  0F*(00)				     db	15 dup (0)
    174	038D  0F*(00)				     db	15 dup (0)
    175	039C  0F*(00)				     db	15 dup (0)
    176	03AB  0F 0F 0F 0F 0F 0F	0F+		     db	15,15,15,15,15,15,15,15,15,0,0,0,0,0,0
    177	      0F 0F 00 00 00 00	00+
    178	      00
    179
    180	03BA			     .code
    181				     ; Procedimento para navegação no	menu usando as setas
    182	0000			     HANDLE_INPUT PROC
    183	0000  80 FC 48			 cmp ah, 48H
    184	0003  74 08			 je ARROW_UP
    185
    186	0005  80 FC 50			 cmp ah, 50H
    187	0008  74 0C			 je ARROW_DOWN
    188
    189	000A  EB 1A 90			 jmp END_HANDLE
    190
    191	000D			     ARROW_UP:
    192	000D  B4 00			 mov ah, 0
    193	000F  88 26 0000r		 mov menu, ah
    194
    195	0013  EB 07 90			 jmp RENDER_BUTTONS
    196
    197	0016			     ARROW_DOWN:
    198	0016  B4 01			 mov ah, 1
    199	0018  88 26 0000r		 mov menu, ah
    200
    201	001C			     RENDER_BUTTONS:
    202	001C  A0 0001r			 mov al, screen
    203	001F  3C 00			 cmp al, 0H
    204	0021  75 03			 jne END_HANDLE
    205	0023  E8 0055			 call PRINT_BUTTONS
    206
    207	0026			     END_HANDLE:
    208	0026  C3			 ret
    209	0027			     ENDP
    210
    211	0027			     PRINT_TITLE_MENU proc
    212	0027  8C D8			 mov AX, DS
    213	0029  8E C0			 mov ES, AX
    214
    215	002B  BD 0003r			 mov BP, OFFSET	string
    216	002E  B9 00F5			 mov CX, string_length ; tamanho
    217	0031  B3 02			 mov BL, 02H ; Cor verde (se bit 1 de AL estiver limpo,	usamos BL)
    218	0033  BA 0000			 mov DX, 0 ;linha / coluna
    219	0036  E8 0001			 call PRINT_STRING
    220
    221	0039  C3			 ret
    222	003A			     PRINT_TITLE_MENU endp
    223
    224	003A			     PRINT_STRING PROC
    225	003A  50			 push AX
    226	003B  53			 push BX
    227	003C  51			 push CX
    228	003D  52			 push DX
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 5
MAIN.ASM



    229	003E  56			 push SI
    230	003F  55			 push BP
    231
    232					 ; Configura os	parâmetros para a função 13h
    233	0040  B4 13			 mov AH, 13h	     ; Função	para escrever string com atributos de cor
    234	0042  B0 01			 mov AL, 1	     ; Modo: atualiza cursor após a escrita
    235							     ; AL = 1 -> modo de atualização de cursor
    236	0044  B7 00			 mov BH, 0	     ; Página de vídeo 0
    237	0046  CD 10			 int 10h	     ; Chamada de interrupção	para exibir a string
    238
    239	0048  5D			 pop BP
    240	0049  5E			 pop SI
    241	004A  5A			 pop DX
    242	004B  59			 pop CX
    243	004C  5B			 pop BX
    244	004D  58			 pop AX
    245	004E  C3			 ret
    246	004F			     ENDP
    247
    248				     ; AX = sprite position
    249				     ; SI = sprite pointer
    250	004F			     RENDER_SPRITE proc
    251	004F  53			 push bx
    252	0050  51			 push cx
    253	0051  52			 push dx
    254	0052  57			 push di
    255	0053  06			 push es
    256	0054  1E			 push ds
    257	0055  50			 push ax
    258
    259
    260
    261	0056  B8 0000s			 mov ax, @data
    262	0059  8E D8			 mov ds, ax
    263
    264	005B  B8 A000			 mov ax, 0A000h
    265	005E  8E C0			 mov es, ax
    266
    267	0060  58			 pop ax
    268	0061  8B F8			 mov di, ax
    269	0063  BA 0009			 mov dx, 9
    270	0066  50			 push ax
    271
    272	0067			     DRAW_LINE:
    273	0067  B9 000F			 mov cx, 15
    274	006A  F3> A4			 rep movsb
    275	006C  81 C7 0131		 add di, 320 - 15
    276	0070  4A			 dec dx
    277	0071  75 F4			 jnz DRAW_LINE
    278
    279	0073  58			 pop ax
    280	0074  1F			 pop ds
    281	0075  07			 pop es
    282	0076  5F			 pop di
    283	0077  5A			 pop dx
    284	0078  59			 pop cx
    285	0079  5B			 pop bx
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 6
MAIN.ASM



    286	007A  C3		     ret
    287	007B			     endp
    288
    289				     ; Procedimento para exibir	os botões INICIAR e SAIR
    290	007B			     PRINT_BUTTONS proc
    291	007B  50			 push ax
    292	007C  B3 0F			 mov bl, 0FH
    293	007E  8A 26 0000r		 mov ah, menu
    294	0082  80 FC 00			 cmp ah, 0
    295	0085  75 02			 jne START_BTN
    296	0087  B3 0C			 mov bl, 0CH
    297
    298	0089			     START_BTN:
    299					 ; Exibe o botão INICIAR
    300	0089  BD 00F8r			 mov BP, OFFSET	btn_iniciar
    301	008C  B9 0051			 mov CX, btn_iniciar_length ; tamanho
    302	008F  B2 00			 mov DL, 0 ; coluna
    303	0091  B6 12			 mov DH, 18 ; linha
    304	0093  E8 FFA4			 call PRINT_STRING
    305
    306	0096  B3 0F			 mov bl, 0FH
    307	0098  8A 26 0000r		 mov ah, menu
    308	009C  80 FC 01			 cmp ah, 1
    309	009F  75 02			 jne EXIT_BTN
    310	00A1  B3 0C			 mov bl, 0CH
    311
    312	00A3			     EXIT_BTN:
    313					 ; Exibe o botão SAIR
    314	00A3  BD 0149r			 mov BP, OFFSET	btn_sair
    315	00A6  B9 0051			 mov CX, btn_sair_length ; tamanho
    316	00A9  B2 00			 mov DL, 0 ; coluna
    317	00AB  B6 15			 mov DH, 21 ; linha
    318	00AD  E8 FF8A			 call PRINT_STRING
    319
    320	00B0  58			 pop ax
    321	00B1  C3			 ret
    322	00B2			     endp
    323
    324	00B2			     RESET_CROSS_SHIP_POS proc
    325	00B2  50			 push ax
    326
    327	00B3  B8 7D00			 mov ax, 100 * 320
    328	00B6  A3 02A8r			 mov ship_pos, ax
    329	00B9  05 0131			 add ax, 305
    330	00BC  A3 0331r			 mov alien_ship_pos, ax
    331
    332	00BF  58			 pop ax
    333	00C0  C3			 ret
    334	00C1			     endp
    335
    336	00C1			     CROSS_SHIPS proc
    337	00C1  A1 02A8r			 mov ax, ship_pos
    338	00C4  BE 019Ar			 mov si, offset	empty_sprite
    339
    340	00C7  50			 push ax
    341	00C8  E8 FF84			 call RENDER_SPRITE
    342	00CB  58			 pop ax
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 7
MAIN.ASM



    343
    344	00CC  3D 7E31			 cmp ax, 101*320-15
    345	00CF  74 17			 je MOVE_ALIEN_SHIP
    346
    347	00D1  FF 06 02A8r		 inc ship_pos
    348	00D5  40			 inc ax
    349	00D6  BE 0221r			 mov si, offset	ship
    350	00D9  E8 FF73			 call RENDER_SPRITE
    351
    352	00DC  33 C9			 xor cx, cx
    353	00DE  BA 4000			 mov dx, 4000H
    354	00E1  B4 86			 mov ah, 86H
    355	00E3  CD 15			 int 15h
    356	00E5  EB 2B 90			 jmp END_POS_UPDATE
    357
    358	00E8			     MOVE_ALIEN_SHIP:
    359	00E8  A1 0331r			 mov ax, alien_ship_pos
    360	00EB  BE 019Ar			 mov si, offset	empty_sprite
    361
    362	00EE  50			 push ax
    363	00EF  3D 7D00			 cmp ax, 100*320
    364	00F2  58			 pop ax
    365
    366	00F3  74 1A			 je RESET_POS
    367	00F5  E8 FF57			 call RENDER_SPRITE
    368
    369	00F8  FF 0E 0331r		 dec alien_ship_pos
    370	00FC  48			 dec ax
    371	00FD  BE 02AAr			 mov si, offset	alien_ship
    372	0100  E8 FF4C			 call RENDER_SPRITE
    373
    374	0103  33 C9			 xor cx, cx
    375	0105  BA 4000			 mov dx, 4000H
    376	0108  B4 86			 mov ah, 86H
    377	010A  CD 15			 int 15h
    378	010C  EB 04 90			 jmp END_POS_UPDATE
    379
    380	010F			     RESET_POS:
    381	010F  E8 FFA0			 call RESET_CROSS_SHIP_POS
    382
    383	0112			     END_POS_UPDATE:
    384	0112  C3			 ret
    385	0113			     endp
    386
    387				     ; Procedimento principal
    388	0113			     main proc;	Muda modo grafico
    389	0113  B8 0000s			 mov AX, @data
    390	0116  8E D8			 mov DS, AX
    391	0118  8E C0			 mov ES, AX
    392
    393					 ; Define o modo de video
    394	011A  B4 00			 mov ah, 0h
    395	011C  B0 13			 mov al, 13h
    396	011E  CD 10			 int 10h
    397
    398					 ; Exibe título e botões do menu
    399	0120  E8 FF04			 call PRINT_TITLE_MENU
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 8
MAIN.ASM



    400	0123  E8 FF55			 call PRINT_BUTTONS
    401	0126  E8 FF89			 call RESET_CROSS_SHIP_POS
    402
    403	0129			     MENU_LOOP:
    404	0129  E8 FF95			 call CROSS_SHIPS
    405
    406					 ; Recebe entrada do usuário
    407	012C  B4 01			 mov ah, 1H
    408	012E  CD 16			 int 16H
    409	0130  74 F7			 jz MENU_LOOP
    410
    411					 ; Chama a função de navegação
    412	0132  E8 FECB			 call HANDLE_INPUT
    413
    414					 ; Condição para iniciar o jogo
    415	0135  80 FC 1C			 cmp ah, 1CH
    416	0138  74 06			 je SELECT_OPTION
    417
    418					 ; Retorno ao loop do menu
    419	013A  B4 00			 mov ah, 0H
    420	013C  CD 16			 int 16H
    421	013E  EB E9			 jmp MENU_LOOP
    422
    423	0140			     SELECT_OPTION:
    424	0140  B4 00			 mov ah, 0H
    425	0142  CD 16			 int 16H
    426
    427	0144  8A 26 0000r		 mov ah, menu
    428	0148  80 FC 01			 cmp ah, 1
    429	014B  74 06			 je ENCERRA
    430
    431	014D			     GAME_LOOP:
    432					 ; call	PRINT_SECTOR
    433	014D  B8 19A2			 mov ax, 6562
    434	0150  BE 0221r			 mov si, offset	ship
    435
    436					 ; jmp MENU_LOOP
    437
    438
    439	0153			     ENCERRA:
    440					 ; Volta para modo texto
    441	0153  B4 00			 mov ah, 0h
    442	0155  B0 03			 mov al, 3h
    443	0157  CD 10			 int 10h
    444
    445					 ; Encerra o programa
    446	0159  B4 4C			 mov ah, 4ch
    447	015B  B0 00			 mov al, 0
    448	015D  CD 21			 int 21h
    449	015F  C3			 ret
    450	0160			     main endp
    451
    452				     end main
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "11/15/24"
??FILENAME			  Text	 "MAIN	  "
??TIME				  Text	 "11:01:48"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALIEN_SHIP			  Byte	 DGROUP:02AA
ALIEN_SHIP_POS			  Word	 DGROUP:0331
ARROW_DOWN			  Near	 _TEXT:0016
ARROW_UP			  Near	 _TEXT:000D
BTN_INICIAR			  Byte	 DGROUP:00F8
BTN_INICIAR_LENGTH		  Number 0051
BTN_SAIR			  Byte	 DGROUP:0149
BTN_SAIR_LENGTH			  Number 0051
CROSS_SHIPS			  Near	 _TEXT:00C1
DRAW_LINE			  Near	 _TEXT:0067
EMPTY_SPRITE			  Byte	 DGROUP:019A
ENCERRA				  Near	 _TEXT:0153
END_HANDLE			  Near	 _TEXT:0026
END_POS_UPDATE			  Near	 _TEXT:0112
EXIT_BTN			  Near	 _TEXT:00A3
GAME_LOOP			  Near	 _TEXT:014D
HANDLE_INPUT			  Near	 _TEXT:0000
MAIN				  Near	 _TEXT:0113
MENU				  Byte	 DGROUP:0000
MENU_LOOP			  Near	 _TEXT:0129
MOVE_ALIEN_SHIP			  Near	 _TEXT:00E8
PRINT_BUTTONS			  Near	 _TEXT:007B
PRINT_STRING			  Near	 _TEXT:003A
PRINT_TITLE_MENU		  Near	 _TEXT:0027
RENDER_BUTTONS			  Near	 _TEXT:001C
RENDER_SPRITE			  Near	 _TEXT:004F
RESET_CROSS_SHIP_POS		  Near	 _TEXT:00B2
RESET_POS			  Near	 _TEXT:010F
SCREEN				  Byte	 DGROUP:0001
SECTOR				  Byte	 DGROUP:0002
SELECT_OPTION			  Near	 _TEXT:0140
SHIP				  Byte	 DGROUP:0221
SHIP_POS			  Word	 DGROUP:02A8
SHOT_NAVE			  Byte	 DGROUP:0333
START_BTN			  Near	 _TEXT:0089
STRING				  Byte	 DGROUP:0003
STRING_LENGTH			  Number 00F5
Turbo Assembler	 Version 4.1	    11/15/24 11:01:48	    Page 10
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0400 Para	  Stack	  STACK
  _DATA				  16  03BA Word	  Public  DATA
_TEXT				  16  0160 Word	  Public  CODE
