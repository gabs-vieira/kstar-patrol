Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 1
MAIN.ASM



      1	0000			     .model small
      2	0000			     .stack
      3
      4	0000			     .data
      5	0000  00			 menu db 0
      6					 ; 0 - Menu
      7					 ; 1 - Setor
      8					 ; 2 - Jogo
      9					 ; 3 - Game Over
     10	0001  00			 screen	db 0
     11	0002  01			 sector	db 1
     12					 ; sprite_pos dw 0
     13
     14					 ; Strings para	o título e botões
     15	0003  07*(20) 20 5F 20 20 +	 string	 db 7 dup(" ")," _  __	 ___ _		  ",13,10
     16	      5F 5F 20 20 20 5F	5F+
     17	      5F 20 5F 20 20 20	20+
     18	      20 20 20 20 20 20	20+
     19	      20 0D 0A
     20	0026  07*(20) 7C 20 7C 2F +		 db 7 dup(" "),"| |/ /__/ __| |_ __ _ _	_ ",13,10
     21	      20 2F 5F 5F 2F 20	5F+
     22	      5F 7C 20 7C 5F 20	5F+
     23	      5F 20 5F 20 5F 20	5F+
     24	      20 0D 0A
     25	0049  07*(20) 7C 20 27 20 +		 db 7 dup(" "),"| ' <___\__ \  _/ _` | '_|",13,10
     26	      3C 5F 5F 5F 5C 5F	5F+
     27	      20 5C 20 20 5F 2F	20+
     28	      5F 60 20 7C 20 27	5F+
     29	      7C 0D 0A
     30	006C  07*(20) 7C 5F 7C 5C +		 db 7 dup(" "),"|_|\_\	|___/\__\__,_|_|  ",13,10
     31	      5F 5C 20 20 7C 5F	5F+
     32	      5F 2F 5C 5F 5F 5C	5F+
     33	      5F 2C 5F 7C 5F 7C	20+
     34	      20 0D 0A
     35	008F  07*(20) 7C 20 5F 20 +		 db 7 dup(" "),"| _ \__	_| |_ _	_ ___| |  ",13,10
     36	      5C 5F 5F 20 5F 7C	20+
     37	      7C 5F 20 5F 20 5F	20+
     38	      5F 5F 5F 7C 20 7C	20+
     39	      20 0D 0A
     40	00B2  07*(20) 7C 20 20 5F +		 db 7 dup(" "),"|  _/ _` |  _| '_/ _ \ |  ",13,10
     41	      2F 20 5F 60 20 7C	20+
     42	      20 5F 7C 20 27 5F	2F+
     43	      20 5F 20 5C 20 7C	20+
     44	      20 0D 0A
     45	00D5  07*(20) 7C 5F 7C 20 +		 db 7 dup(" "),"|_| \__,_|\__|_| \___/_|  ",13,10
     46	      5C 5F 5F 2C 5F 7C	5C+
     47	      5F 5F 7C 5F 7C 20	5C+
     48	      5F 5F 5F 2F 5F 7C	20+
     49	      20 0D 0A
     50
     51	      =00F5			 string_length equ $-string
     52
     53	00F8  0E*(20) DA C4 C4 C4 +	 btn_iniciar db	 14 dup(" "),218,196,196,196,196,196,196,196,196,196,191,13,10
     54	      C4 C4 C4 C4 C4 C4	BF+
     55	      0D 0A
     56	0113  0E*(20) B3 20 49 4E +		      db 14 dup(" "),179," INICIAR ",179,10,13
     57	      49 43 49 41 52 20	B3+
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 2
MAIN.ASM



     58	      0A 0D
     59	012E  0E*(20) C0 C4 C4 C4 +		      db 14 dup(" "),192,196,196,196,196,196,196,196,196,196,217,13,10
     60	      C4 C4 C4 C4 C4 C4	D9+
     61	      0D 0A
     62
     63	      =0051			 btn_iniciar_length equ	$-btn_iniciar
     64
     65	0149  0E*(20) DA C4 C4 C4 +	 btn_sair db  14 dup(" "),218,196,196,196,196,196,196,196,196,196,191,13,10
     66	      C4 C4 C4 C4 C4 C4	BF+
     67	      0D 0A
     68	0164  0E*(20) B3 20 20 53 +		   db 14 dup(" "),179,"	 SAIR	",179,10,13
     69	      41 49 52 20 20 20	B3+
     70	      0A 0D
     71	017F  0E*(20) C0 C4 C4 C4 +		   db 14 dup(" "),192,196,196,196,196,196,196,196,196,196,217,13,10
     72	      C4 C4 C4 C4 C4 C4	D9+
     73	      0D 0A
     74
     75	      =0051			 btn_sair_length equ $-btn_sair
     76
     77
     78	019A  0F 0F 0F 0F 0F 0F	0F+	 ship	     db	15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0
     79	      0F 0F 0F 0F 0F 00	00+
     80	      00 00
     81	01AA  00 00 0F 0F 00 00	00+		     db	0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0
     82	      00 00 00 00 00 00	00+
     83	      00 00
     84	01BA  00 00 0F 0F 0F 0F	00+		     db	0,0,15,15,15,15,0,0,0,0,0,0,0,0,0
     85	      00 00 00 00 00 00	00+
     86	      00
     87	01C9  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,0,0,0,0,0,0
     88	      0F 00 00 00 00 00	00
     89	01D7  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15
     90	      0F 0F 0F 0F 0F 0F	0F+
     91	      0F 0F
     92	01E7  00 00 0F 0F 0F 0F	0F+		     db	0,0,15,15,15,15,15,15,0,0,0,0,0,0
     93	      0F 00 00 00 00 00	00
     94	01F5  00 00 0F 0F 0F 0F	00+		     db	0,0,15,15,15,15,0,0,0,0,0,0,0,0,0
     95	      00 00 00 00 00 00	00+
     96	      00
     97	0204  00 00 0F 0F 00 00	00+		     db	0,0,15,15,0,0,0,0,0,0,0,0,0,0,0,0
     98	      00 00 00 00 00 00	00+
     99	      00 00
    100	0214  0F 0F 0F 0F 0F 0F	0F+		     db	15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0
    101	      0F 0F 0F 0F 0F 00	00+
    102	      00 00
    103
    104	0224  00 00 00 00 00 00	00+	 alien_ship   db 0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9
    105	      00 09 09 09 09 09	09+
    106	      09 09
    107	0234  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0
    108	      00 09 09 00 00 00	00+
    109	      00 00
    110	0244  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    111	      00 00 00 00 00 00	00+
    112	      00 00
    113	0254  00 00 00 00 09 09	09+		     db	0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0
    114	      09 00 00 00 00 00	00+
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 3
MAIN.ASM



    115	      00 00
    116	0264  09 09 09 09 09 09	09+		     db	9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0
    117	      09 09 09 09 09 00	00+
    118	      00 00
    119	0274  00 00 00 00 09 09	09+		     db	0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0
    120	      09 00 00 00 00 00	00+
    121	      00 00
    122	0284  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    123	      00 00 00 00 00 00	00+
    124	      00 00
    125	0294  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0
    126	      00 09 09 00 00 00	00+
    127	      00 00
    128	02A4  00 00 00 00 00 00	00+		     db	0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9
    129	      00 09 09 09 09 09	09+
    130	      09 09
    131
    132
    133	02B4  0F 0F 0F 0F 0F 0F	0F+	 shot_nave    db 15,15,15,15,15,15,15,15,15,0,0,0,0,0,0
    134	      0F 0F 00 00 00 00	00+
    135	      00
    136	02C3  0F*(00)				     db	15 dup (0)
    137	02D2  0F*(00)				     db	15 dup (0)
    138	02E1  0F*(00)				     db	15 dup (0)
    139	02F0  00 00 00 00 00 00	0F+		     db	0,0,0,0,0,0,15,15,15,15,15,15,15,15,15
    140	      0F 0F 0F 0F 0F 0F	0F+
    141	      0F
    142	02FF  0F*(00)				     db	15 dup (0)
    143	030E  0F*(00)				     db	15 dup (0)
    144	031D  0F*(00)				     db	15 dup (0)
    145	032C  0F 0F 0F 0F 0F 0F	0F+		     db	15,15,15,15,15,15,15,15,15,0,0,0,0,0,0
    146	      0F 0F 00 00 00 00	00+
    147	      00
    148
    149	033B			     .code
    150				     ; Procedimento para navegação no	menu usando as setas
    151	0000			     HANDLE_INPUT PROC
    152	0000  80 FC 48			 cmp ah, 48H
    153	0003  74 08			 je ARROW_UP
    154
    155	0005  80 FC 50			 cmp ah, 50H
    156	0008  74 0D			 je ARROW_DOWN
    157
    158	000A  EB 1C 90			 jmp END_HANDLE
    159
    160	000D			     ARROW_UP:
    161	000D  B4 00			 mov ah, 0
    162	000F  BB 0000r			 mov bx, offset	menu
    163	0012  88 27			 mov byte ptr [bx], ah
    164
    165	0014  EB 08 90			 jmp RENDER_BUTTONS
    166
    167	0017			     ARROW_DOWN:
    168	0017  B4 01			 mov ah, 1
    169	0019  BB 0000r			 mov bx, offset	menu
    170	001C  88 27			 mov byte ptr [bx], ah
    171
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 4
MAIN.ASM



    172	001E			     RENDER_BUTTONS:
    173	001E  A0 0001r			 mov al, screen
    174	0021  3C 00			 cmp al, 0H
    175	0023  75 03			 jne END_HANDLE
    176	0025  E8 0055			 call PRINT_BUTTONS
    177
    178	0028			     END_HANDLE:
    179	0028  C3			 ret
    180	0029			     ENDP
    181
    182	0029			     PRINT_TITLE_MENU proc
    183	0029  8C D8			 mov AX, DS
    184	002B  8E C0			 mov ES, AX
    185
    186	002D  BD 0003r			 mov BP, OFFSET	string
    187	0030  B9 00F5			 mov CX, string_length ; tamanho
    188	0033  B3 02			 mov BL, 02H ; Cor verde (se bit 1 de AL estiver limpo,	usamos BL)
    189	0035  BA 0000			 mov DX, 0 ;linha / coluna
    190	0038  E8 0001			 call PRINT_STRING
    191
    192	003B  C3			 ret
    193	003C			     PRINT_TITLE_MENU endp
    194
    195	003C			     PRINT_STRING PROC
    196	003C  50			 push AX
    197	003D  53			 push BX
    198	003E  51			 push CX
    199	003F  52			 push DX
    200	0040  56			 push SI
    201	0041  55			 push BP
    202
    203					 ; Configura os	parâmetros para a função 13h
    204	0042  B4 13			 mov AH, 13h	     ; Função	para escrever string com atributos de cor
    205	0044  B0 01			 mov AL, 1	     ; Modo: atualiza cursor após a escrita
    206							     ; AL = 1 -> modo de atualização de cursor
    207	0046  B7 00			 mov BH, 0	     ; Página de vídeo 0
    208	0048  CD 10			 int 10h	     ; Chamada de interrupção	para exibir a string
    209
    210	004A  5D			 pop BP
    211	004B  5E			 pop SI
    212	004C  5A			 pop DX
    213	004D  59			 pop CX
    214	004E  5B			 pop BX
    215	004F  58			 pop AX
    216	0050  C3			 ret
    217	0051			     ENDP
    218
    219				     ; AX = sprite position
    220				     ; SI = sprite pointer
    221	0051			     RENDER_SPRITE proc
    222	0051  53			 push bx
    223	0052  51			 push cx
    224	0053  52			 push dx
    225	0054  57			 push di
    226	0055  06			 push es
    227	0056  1E			 push ds
    228	0057  50			 push ax
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 5
MAIN.ASM



    229
    230
    231
    232	0058  B8 0000s			 mov ax, @data
    233	005B  8E D8			 mov ds, ax
    234
    235	005D  B8 A000			 mov ax, 0A000h
    236	0060  8E C0			 mov es, ax
    237
    238	0062  58			 pop ax
    239	0063  8B F8			 mov di, ax
    240	0065  BA 0009			 mov dx, 9
    241	0068  50			 push ax
    242
    243	0069			     DRAW_LINE:
    244	0069  B9 000F			 mov cx, 15
    245	006C  F3> A4			 rep movsb
    246	006E  81 C7 0131		 add di, 320 - 15
    247	0072  4A			 dec dx
    248	0073  75 F4			 jnz DRAW_LINE
    249
    250	0075  58			 pop ax
    251	0076  1F			 pop ds
    252	0077  07			 pop es
    253	0078  5F			 pop di
    254	0079  5A			 pop dx
    255	007A  59			 pop cx
    256	007B  5B			 pop bx
    257	007C  C3		     ret
    258	007D			     endp
    259
    260				     ; Procedimento para exibir	os botões INICIAR e SAIR
    261	007D			     PRINT_BUTTONS proc
    262	007D  50			 push ax
    263	007E  B3 0F			 mov bl, 0FH
    264	0080  8A 26 0000r		 mov ah, menu
    265	0084  80 FC 00			 cmp ah, 0
    266	0087  75 02			 jne START_BTN
    267	0089  B3 0C			 mov bl, 0CH
    268
    269	008B			     START_BTN:
    270					 ; Exibe o botão INICIAR
    271	008B  BD 00F8r			 mov BP, OFFSET	btn_iniciar
    272	008E  B9 0051			 mov CX, btn_iniciar_length ; tamanho
    273	0091  B2 00			 mov DL, 0 ; coluna
    274	0093  B6 12			 mov DH, 18 ; linha
    275	0095  E8 FFA4			 call PRINT_STRING
    276
    277	0098  B3 0F			 mov bl, 0FH
    278	009A  8A 26 0000r		 mov ah, menu
    279	009E  80 FC 01			 cmp ah, 1
    280	00A1  75 02			 jne EXIT_BTN
    281	00A3  B3 0C			 mov bl, 0CH
    282
    283	00A5			     EXIT_BTN:
    284					 ; Exibe o botão SAIR
    285	00A5  BD 0149r			 mov BP, OFFSET	btn_sair
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 6
MAIN.ASM



    286	00A8  B9 0051			 mov CX, btn_sair_length ; tamanho
    287	00AB  B2 00			 mov DL, 0 ; coluna
    288	00AD  B6 15			 mov DH, 21 ; linha
    289	00AF  E8 FF8A			 call PRINT_STRING
    290
    291	00B2  58			 pop ax
    292	00B3  C3			 ret
    293	00B4			     endp
    294
    295				     ; Procedimento principal
    296	00B4			     main proc;	Muda modo grafico
    297	00B4  B8 0000s			 mov AX, @data
    298	00B7  8E D8			 mov DS, AX
    299	00B9  8E C0			 mov ES, AX
    300
    301					 ; Define o modo de video
    302	00BB  B4 00			 mov ah, 0h
    303	00BD  B0 13			 mov al, 13h
    304	00BF  CD 10			 int 10h
    305
    306					 ; Exibe título e botões do menu
    307	00C1  E8 FF65			 call PRINT_TITLE_MENU
    308	00C4  E8 FFB6			 call PRINT_BUTTONS
    309
    310	00C7			     MENU_LOOP:
    311					 ; Espera por entrada do usuário
    312	00C7  B4 01			 mov ah, 1H
    313	00C9  CD 16			 int 16H
    314	00CB  74 FA			 jz MENU_LOOP
    315
    316					 ; Chama a função de navegação
    317	00CD  E8 FF30			 call HANDLE_INPUT
    318
    319					 ; Condição para iniciar o jogo
    320	00D0  80 FC 1C			 cmp ah, 1CH
    321	00D3  74 06			 je SELECT_OPTION
    322
    323					 ; Retorno ao loop do menu
    324	00D5  B4 00			 mov ah, 0H
    325	00D7  CD 16			 int 16H
    326	00D9  EB EC			 jmp MENU_LOOP
    327
    328	00DB			     SELECT_OPTION:
    329	00DB  B4 00			 mov ah, 0H
    330	00DD  CD 16			 int 16H
    331
    332	00DF  8A 26 0000r		 mov ah, menu
    333	00E3  80 FC 01			 cmp ah, 1
    334	00E6  74 09			 je ENCERRA
    335
    336	00E8			     GAME_LOOP:
    337					 ; call	PRINT_SECTOR
    338	00E8  B8 19A2			 mov ax, 6562
    339	00EB  BE 019Ar			 mov si, offset	ship
    340	00EE  E8 FF60			 call RENDER_SPRITE
    341
    342					 ; jmp MENU_LOOP
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 7
MAIN.ASM



    343
    344
    345	00F1			     ENCERRA:
    346					 ; Encerra o programa
    347	00F1  B4 4C			 mov ah, 4ch
    348	00F3  B0 00			 mov al, 0
    349	00F5  CD 21			 int 21h
    350	00F7  C3			 ret
    351	00F8			     main endp
    352
    353				     end main
Turbo Assembler	 Version 4.1	    11/14/24 21:15:43	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "11/14/24"
??FILENAME			  Text	 "MAIN	  "
??TIME				  Text	 "21:15:42"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALIEN_SHIP			  Byte	 DGROUP:0224
ARROW_DOWN			  Near	 _TEXT:0017
ARROW_UP			  Near	 _TEXT:000D
BTN_INICIAR			  Byte	 DGROUP:00F8
BTN_INICIAR_LENGTH		  Number 0051
BTN_SAIR			  Byte	 DGROUP:0149
BTN_SAIR_LENGTH			  Number 0051
DRAW_LINE			  Near	 _TEXT:0069
ENCERRA				  Near	 _TEXT:00F1
END_HANDLE			  Near	 _TEXT:0028
EXIT_BTN			  Near	 _TEXT:00A5
GAME_LOOP			  Near	 _TEXT:00E8
HANDLE_INPUT			  Near	 _TEXT:0000
MAIN				  Near	 _TEXT:00B4
MENU				  Byte	 DGROUP:0000
MENU_LOOP			  Near	 _TEXT:00C7
PRINT_BUTTONS			  Near	 _TEXT:007D
PRINT_STRING			  Near	 _TEXT:003C
PRINT_TITLE_MENU		  Near	 _TEXT:0029
RENDER_BUTTONS			  Near	 _TEXT:001E
RENDER_SPRITE			  Near	 _TEXT:0051
SCREEN				  Byte	 DGROUP:0001
SECTOR				  Byte	 DGROUP:0002
SELECT_OPTION			  Near	 _TEXT:00DB
SHIP				  Byte	 DGROUP:019A
SHOT_NAVE			  Byte	 DGROUP:02B4
START_BTN			  Near	 _TEXT:008B
STRING				  Byte	 DGROUP:0003
STRING_LENGTH			  Number 00F5

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0400 Para	  Stack	  STACK
  _DATA				  16  033B Word	  Public  DATA
_TEXT				  16  00F8 Word	  Public  CODE
